{% macro list_joblogs(job) %}
    <table class="table table-sm">
    <th>In</th><th>Out</th><th>Break</th><th>Time</th><th>&nbsp;</th>
    {% for elem in job.joblogs %} <tr> <td>{{ elem.in | date("Y-m-d H:i") }}</td>
    <td>{{ elem.out | date("Y-m-d H:i") }}</td>
    <td>{{ elem.breakminutes }}</td>
    <td>{{ elem.workedtime }}</td>
    <td>
    <a href="#!" id="editJobLog_{{ elem.id }}" data-html="true" onClick="return grabEditJobLogForm({{ elem.id }}, {{ elem.job.shift.id }});"><span class="fas fa-hourglass"></span></a>
    <a href="#!" id="deleteJobLog_{{ elem.id }}" data-html="true" onClick="return deleteJobLog({{ elem.id }}, {{ elem.job.shift.id }});"><span class="remove_glyph"></span></a>
    </td>
    </tr>
    {% endfor %}
    <tr>
    <td colspan="3">
        &nbsp;
    </td>
    <td>
        {{ job.workedtime }}   
    </td>
    <td>
      <a href="#" id="addJobLog_{{ job.id }}" data-html="true" onClick="return grabNewJobLogForm({{ job.id }}, {{ job.shift.id }});">
         <span class="ccButtonSmall">
          Add Hours
         </span>
      </a>
    </td>
    </tr>
    </table>
{% endmacro %}
{% import _self as jlmacros %}

{% if jobs.count > 0 %}
<table id="jobTableTable_{{ shift.id }}" class="table table-striped-inverted table-sm">
    <thead class="thead-inverse">
        <tr>
            <th class="no-sort">
{#
            <input onClick="return select_all_jobs({{ shift.id }}, this);" class="select_all_persons_checkbox" type="checkbox" name="select_all">
#}
            &nbsp;
            </th>
            <th>Name</th>
            <th>Status</th>
{% set shift_checks = cc_jobs.checksForShift(shift) %}
{% for check in shift_checks %}
  {% if check.type == "InformCheck" %}
    <th class="no-sort">{{ check.body }}</th>
  {% endif %}
{% endfor %}
            <th>Comments</th>
            <th class="no-sort">&nbsp;</th>
            <th class="no-sort">&nbsp;</th>
        </tr>
    </thead>
    <tbody>
    {% for job in jobs %}
        <tr>
            <td>
            <input class="job_list_checkbox_{{ shift.event.id }}" type="checkbox" name="job_list" value="{{ job.id }},{{ job.person.id }}">
            <a tabindex="0" href="#" id="popSummary_person_{{ job.person.id }}{{ job.id}}" onClick="return popSummary('person', {{ job.person.id }},{{ job.id}});"><span style="font-size: 15px" class="fas fa-info-circle"></span></a>
            <a tabindex="0" href="#" title="Jobs" id="popSummary_person_jobs_{{ job.person.id }}{{ job.id }}" onClick="return popPersonJobs({{ job.person.id }}, {{ job.id }});"><span style="font-size: 15px" class="fas fa-user-clock"></span></a>
    {% set pncontext = {
                'message_types': ['AdminNote', 'PersonNote'],
                'system': 'crewcall',
                'object_name': 'person',
                'external_id': job.person.id
        }
    %}
    {% set pnotes = sakonnin_messages.MessagesForContext(pncontext) %}
    {% if pnotes | length > 0 %}
            <a href="#" title="Person Notes" onClick="return openSakonninMessageLogBox('{{ path('message_context_search', {'access': 'ajax', 'system': pncontext.system, 'object_name': pncontext.object_name, 'external_id': pncontext.external_id, 'criterias': {'message_types': ['AdminNote', 'PersonNote'] }}) }}', 'Notes about {{ job.person }}')"><span style="font-size: 15px" class="fas fa-comment"></span></a>
    {% endif %}
        {% set overjobs = cc_jobs.checkoverlapforperson(job, {'return_jobs': true }) %}
        {% if overjobs | length > 0 %}
<div id="overlap_popover_content_{{ job.id }}" class="d-none">
{% for ojob in overjobs %}
{{ ojob.shift }} ({{ ojob.statelabel }} {{ ojob.shift.start|date('H:i') }} -> {{ ojob.shift.end|date('H:i') }})<br>
{% endfor %}
</div>
            <a tabindex="0" href="#" title="Overlapping Jobs" id="overlap_popover_{{ job.id }}" onClick="return popOverlap({{ job.id }});"><span style="font-size: 15px; float: right; color: {% if job.booked %}red{% else %}orange{% endif %};" class="fas fa-exclamation-triangle"></span></a>
        {% endif %}
    
          </td>
            {% set reason = job.person.occupied({'datetime': job.start, 'reason': true}) %}
            <td {% if reason %}class="ccWarn"{% endif %} data-order="{{ job.person.lastname }}">
                <a href="{{ path('person_show', { 'id': job.person.id }) }}">
                {{ job.person }}
                </a>
            </td>
            <td>
            <a tabindex="0" href="#" title="Log Summary" id="popLogSummary_job_{{ job.id }}" onClick="return popLogSummary('job', {{ job.id }});"><span class="fas fa-list-alt"></span></a>
                {{ job.statelabel }}
{# Better be a selectbox or just not at jobs at all, just event or shift.
            {% if job.shift.start < date() %}
                <br><a role="button" class="btn-sm btn-primary" href="#" onClick="return setStateOnJob({{shift.id}}, 'COMPLETED', {{ job.shift.id }});">Complete</a>
            {% endif %}
#}
            </td>
{% set ijobcontext = {
            'message_types': ['InformCheck'],
            'order': 'DESC',
            'system': 'crewcall',
            'object_name': 'job',
            'external_id': job.id
    }
%}
{% for shift_check in shift_checks %}
  {% if shift_check.type == "InformCheck" %}
  <td>
    {% for job_check in job.notesbytype('InformCheck') %}
      {% if job_check.type == "InformCheck" %}
        {% if job_check.state == "CHECKED" and job_check.in_reply_to == shift_check.id %}
            <span style="font-size: 15px" class="fas fa-check"></span>
        {% else %}
            &nbsp;
        {% endif %}
      {% else %}
            &nbsp;
      {% endif %}
    {% endfor %}
 </td>
  {% endif %}
{% endfor %}
            <td id="jobCommentTable_{{ job.id }}">
       {% include 'job/_add_note.html.twig' with {'job': job, 'type': 'AdminNote' } %}
        <a href="#" onClick='return openCcModalFromDiv("jobaddnoteform_AdminNote_{{ job.id }}", "Add an Admin Note"); return false;'><span class="fas fa-pencil-alt"></span></a>
{% if job.notesbytype("AdminNote") | length > 0  or job.notesbytype("JobComment") %}
  <div class="d-none" id="jobcomments_{{ job.id }}">
    <strong>Admin note</strong><br>
    {% for note in job.notesbytype("AdminNote") %}
        {% include 'job/_note.html.twig' with {'job': job, 'note': note, 'subject': true  } %}
    {% endfor %}
    <strong>Crew comment</strong><br>
    {% for note in job.notesbytype("JobComment") %}
        {% include 'job/_note.html.twig' with {'job': job, 'note': note, 'subject': false  } %}
    {% endfor %}
  </div>
        <a href="#" onClick='return openCcModalFromDiv("jobcomments_{{ job.id }}", "Job comments");'><span style="font-size: 15px" class="fas fa-comment"></span></a>
{% endif %}
            </td>
            <td id="jobLogTable_{{ job.id }}" align="right">
            {% if job.shift.start < date() %}
                {% if job.joblogs | length > 0  %}
                     {{ jlmacros.list_joblogs(job) }}
                {% elseif job.booked  %}
                    <a href="#" id="addJobLog_{{ job.id }}" data-html="true" onClick="return grabNewJobLogForm({{ job.id }}, {{ job.shift.id }});">
                       <span class="ccButtonSmall">
                        Add Hours
                       </span>
                    </a>
                {% else %}
                    &nbsp;
                {% endif %}
            {% else %}
                &nbsp;
            {% endif %}
            </td>
            <td id="buttons_{{ job.id }}" align="right">
              <a id="job_toggle_CONFIRMED_{{ job.id }}" role="button" href="#" onClick="return setStateOnJob({{job.id}}, 'CONFIRMED', {{ job.shift.id }});">
                <span class="ccButtonSmall ccConfirmed" {% if job.state == "CONFIRMED" %}style="display: none;"{% endif %}>
                    Confirm
              </a>
                </span>
              <a id="job_toggle_INTERESTED_{{ job.id }}" role="button" href="#" onClick="return setStateOnJob({{job.id}}, 'INTERESTED', {{ job.shift.id }});" {% if job.state == "INTERESTED" %}style="display: none;"{% endif %}>
                <span class="ccButtonSmall ccInterested">
                    Unassign
                </span>
              </a>
              <a id="job_toggle_ASSIGNED_{{ job.id }}" role="button" href="#" onClick="return setStateOnJob({{job.id}}, 'ASSIGNED', {{ job.shift.id }});">
                <span class="ccButtonSmall ccAssigned" {% if job.state == "ASSIGNED" %}style="display: none;"{% endif %}>
                    Assign
                </span>
              </a>
            </td>
        </tr>
    {% endfor %}
    </tbody>
 </table>
{#
<div align="left">
<button class="btn-sm btn-dark" id="message_modal_link" onClick="return openMessageToJobsModal({{ shift.id }});">Send a message</button>

</div>
#}
{% endif %}
{% if sos.count > 0 %}
  <table id="shiftOrgTable" class="table table-striped-inverted table-sm">
    <thead class="thead-inverse">
        <tr>
            <th>&nbsp;</th>
            <th>Organization</th>
            <th>Amount</th>
            <th>Status</th>
            <th align="right">&nbsp;</th>
        </tr>
    </thead>
    <tbody>
    {% for so in sos %}
      <tr>
        <td>&nbsp;</td>
        <td>{{ so.organization }}</td>
        <td>{{ so.amount }}</td>
        <td>
            <a tabindex="0" href="#" title="Logs" id="popLogSummary_shiftorganization_{{ so.id }}" onClick="return popLogSummary('shiftorganization', {{ so.id }});"><span style="font-size: 15px" class="fas fa-list-alt"></span></a>
            {{ so.statelabel }}
        </td>
        <td align="right">
          <a role="button" href="#" onClick="return deleteShiftOrganization({{so.id}});">
            <span class="ccButtonSmall ccInterested">
                Delete
            </span>
          </a>
          <a role="button" href="#" onClick="return grabEditShiftOrganizationForm({{ so.id }});">
            <span class="ccButtonSmall ccAssigned">
                Edit
            </span>
          </a>
        </td>
      </tr>
    {% endfor %}
    </tbody>
  </table>
{% endif %}

<script>
$(document).ready(function() {
    $( "#jobTableTable_{{ shift.id }}").dataTable({
        order: [[ 1, "asc" ]],
        paging: false,
        searching: false,
        info: false,
        columnDefs: [
            {
                "targets": "no-sort",
                "orderable": false,
            }
        ]
    });
    sa = {{ shiftamounts | json_encode | raw }};
    for(var key in sa) {
        counter_id = "#shift_counter_" + key + "_" + {{ shift.id }};
        $( counter_id ).text(sa[key]);
    };
});
</script>
